@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --color-hue: 0; /* Dynamic base hue */
    --color-lightness-adjust: 0%; /* Default lightness (light mode) */
    

  /* Primary color shades with a new lightness scale */
  --color-p1: hsl(var(--color-hue), 100%, calc(95% + var(--color-lightness-adjust)));  /* Lighter accent */
  --color-p2: hsl(var(--color-hue), 100%, calc(85% + var(--color-lightness-adjust)));
  --color-p3: hsl(var(--color-hue), 100%, calc(75% + var(--color-lightness-adjust)));
  --color-p4: hsl(var(--color-hue), 100%, calc(65% + var(--color-lightness-adjust))); 
  --color-p5: hsl(var(--color-hue), 100%, calc(55% + var(--color-lightness-adjust))); /* Base primary color */
  --color-p6: hsl(var(--color-hue), 100%, calc(45% + var(--color-lightness-adjust)));
  --color-p7: hsl(var(--color-hue), 100%, calc(35% + var(--color-lightness-adjust))); 
  --color-p8: hsl(var(--color-hue), 100%, calc(25% + var(--color-lightness-adjust))); /* Darker accent */
  --color-p9: hsl(var(--color-hue), 100%, calc(15% + var(--color-lightness-adjust))); /* Darkest primary */

  /* Secondary colors (complementary to the primary) with the same lightness scale */
  --color-s1: hsl(calc(var(--color-hue) + 120), 100%, calc(95% + var(--color-lightness-adjust)));  /* Lightest secondary */
  --color-s2: hsl(calc(var(--color-hue) + 120), 100%, calc(85% + var(--color-lightness-adjust)));
  --color-s3: hsl(calc(var(--color-hue) + 120), 100%, calc(75% + var(--color-lightness-adjust)));
  --color-s4: hsl(calc(var(--color-hue) + 120), 100%, calc(65% + var(--color-lightness-adjust))); 
  --color-s5: hsl(calc(var(--color-hue) + 120), 100%, calc(55% + var(--color-lightness-adjust))); /* Base secondary color */
  --color-s6: hsl(calc(var(--color-hue) + 120), 100%, calc(45% + var(--color-lightness-adjust)));
  --color-s7: hsl(calc(var(--color-hue) + 120), 100%, calc(35% + var(--color-lightness-adjust))); 
  --color-s8: hsl(calc(var(--color-hue) + 120), 100%, calc(25% + var(--color-lightness-adjust))); /* Darker secondary */
  --color-s9: hsl(calc(var(--color-hue) + 120), 100%, calc(15% + var(--color-lightness-adjust))); /* Darkest secondary */
}

  /* Custom animation for color transitions */
@keyframes color-cycle {
  0% {
    background-color: var(--color-p1);
  }
  12.5% {
    background-color: var(--color-p2);
  }
  25% {
    background-color: var(--color-p3);
  }
  37.5% {
    background-color: var(--color-p4);
  }
  50% {
    background-color: var(--color-p5);
  }
  62.5% {
    background-color: var(--color-p6);
  }
  75% {
    background-color: var(--color-p7);
  }
  87.5% {
    background-color: var(--color-p8);
  }
  100% {
    background-color: var(--color-p9);
  }
}

.grid-animate {
  animation: color-cycle 10s infinite alternate;
}


  * {
    @apply transition-colors duration-500 ease-in-out;
  }


  @keyframes gradient-move {
    0% {
      background-position: 0% 0%;
    }
    100% {
      background-position: 0% 100%;
    }
  }
  
  .animate-gradient-move {
    background-size: 100% 200%;
    animation: gradient-move 6s linear infinite;
  }

  @keyframes color-cycle-0 {
    0%, 100% { background-color: var(--color-p1); }
    14% { background-color: var(--color-p2); }
    28% { background-color: var(--color-p3); }
    42% { background-color: var(--color-p4); }
    56% { background-color: var(--color-p5); }
    70% { background-color: var(--color-p6); }
    84% { background-color: var(--color-p7); }
  }
  
  @keyframes color-cycle-1 { /* Add different variations to avoid uniform cycling */ }
  
  .rounded {
    animation-name: color-cycle-0;
    animation-duration: 6s;
    animation-iteration-count: infinite;
  }

  /* Theme-specific variables
  .dark-green {
    --color-primary: var(--color-p5);
    --color-secondary: var(--color-s5);
    --color-text-base: hsl(0, 0%, 95%);
    --color-bg-primary: hsl(120, 30%, 10%);
    --color-bg-accent: hsl(120, 60%, 90%);
    --color-bg-light: hsl(120, 75%, 95%);
  }

  .light-green {
    --color-primary: var(--color-p4);
    --color-secondary: var(--color-s4);
    --color-text-base: hsl(0, 0%, 10%);
    --color-bg-primary: hsl(120, 90%, 95%);
    --color-bg-accent: hsl(120, 85%, 95%);
    --color-bg-light: hsl(120, 92.5%, 97.5%);
  }

  .dark-blue {
    --color-primary: var(--color-p5);
    --color-secondary: var(--color-s5);
    --color-text-base: hsl(0, 0%, 95%);
    --color-bg-primary: hsl(220, 30%, 10%);
    --color-bg-accent: hsl(220, 60%, 90%);
    --color-bg-light: hsl(220, 75%, 95%);
  }

  .light-blue {
    --color-primary: var(--color-p4);
    --color-secondary: var(--color-s4);
    --color-text-base: hsl(0, 0%, 10%);
    --color-bg-primary: hsl(220, 90%, 95%);
    --color-bg-accent: hsl(220, 85%, 95%);
    --color-bg-light: hsl(220, 92.5%, 97.5%);
  } */

  /* More themes here ... */
}

@layer qwik-ui {
  [data-qui-carousel-viewport] {
    overflow: hidden;
  }

  [data-qui-carousel-scroller] {
    transform: var(--transform);
    will-change: transform;
    transition: 0.3s transform ease-out;

    display: flex;
    gap: var(--gap);
    flex-direction: var(--orientation);

    /* for initial slide position */
    scroll-snap-type: both mandatory;
    max-height: calc(var(--max-slide-height));
  }

  [data-qui-carousel-slide] {
    /* default, feel free to override */
    --total-gap-width: calc(var(--gap) * (var(--slides-per-view) - 1));
    --available-slide-width: calc(100% - var(--total-gap-width));
    --slide-width: calc(var(--available-slide-width) / var(--slides-per-view));

    flex-basis: var(--slide-width);
    flex-shrink: 0;
    position: relative;
  }

  @media (prefers-reduced-motion: reduce) {
    [data-qui-carousel-player] {
      display: none;
    }
  }
}
